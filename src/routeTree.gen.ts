/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as appHomeRouteImport } from './routes/(app)/home'
import { Route as appprofileNpub1Char123idChar125RouteImport } from './routes/(app)/(profile)/npub1{$id}'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const appHomeRoute = appHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => appRouteRoute,
} as any)
const appprofileNpub1Char123idChar125Route =
  appprofileNpub1Char123idChar125RouteImport.update({
    id: '/(profile)/npub1{$id}',
    path: '/npub1{$id}',
    getParentRoute: () => appRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/home': typeof appHomeRoute
  '/npub1{$id}': typeof appprofileNpub1Char123idChar125Route
}
export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/home': typeof appHomeRoute
  '/npub1{$id}': typeof appprofileNpub1Char123idChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/home': typeof appHomeRoute
  '/(app)/(profile)/npub1{$id}': typeof appprofileNpub1Char123idChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/home' | '/npub1{$id}'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/npub1{$id}'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/home'
    | '/(app)/(profile)/npub1{$id}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/home': {
      id: '/(app)/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appHomeRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/(profile)/npub1{$id}': {
      id: '/(app)/(profile)/npub1{$id}'
      path: '/npub1{$id}'
      fullPath: '/npub1{$id}'
      preLoaderRoute: typeof appprofileNpub1Char123idChar125RouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/(app)/route' {
  const createFileRoute: CreateFileRoute<
    '/(app)',
    FileRoutesByPath['/(app)']['parentRoute'],
    FileRoutesByPath['/(app)']['id'],
    FileRoutesByPath['/(app)']['path'],
    FileRoutesByPath['/(app)']['fullPath']
  >
}
declare module './routes/(app)/home' {
  const createFileRoute: CreateFileRoute<
    '/(app)/home',
    FileRoutesByPath['/(app)/home']['parentRoute'],
    FileRoutesByPath['/(app)/home']['id'],
    FileRoutesByPath['/(app)/home']['path'],
    FileRoutesByPath['/(app)/home']['fullPath']
  >
}
declare module './routes/(app)/(profile)/npub1{$id}' {
  const createFileRoute: CreateFileRoute<
    '/(app)/(profile)/npub1{$id}',
    FileRoutesByPath['/(app)/(profile)/npub1{$id}']['parentRoute'],
    FileRoutesByPath['/(app)/(profile)/npub1{$id}']['id'],
    FileRoutesByPath['/(app)/(profile)/npub1{$id}']['path'],
    FileRoutesByPath['/(app)/(profile)/npub1{$id}']['fullPath']
  >
}

interface appRouteRouteChildren {
  appHomeRoute: typeof appHomeRoute
  appprofileNpub1Char123idChar125Route: typeof appprofileNpub1Char123idChar125Route
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appHomeRoute: appHomeRoute,
  appprofileNpub1Char123idChar125Route: appprofileNpub1Char123idChar125Route,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
